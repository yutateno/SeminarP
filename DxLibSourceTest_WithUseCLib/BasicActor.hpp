#pragma once
#include "DxLib.h"
#include "LoadFile.hpp"
#include "Basic.hpp"

class BasicActor
{
protected:
	// 位置について
	VECTOR area;	// キャラ位置
	VECTOR preArea;	// 移動前の直前のキャラ位置
	float angle;	// アングル

	// 動きに関して
	float walkSpeed;	// 移動スピード
	float animSpeed;	// モーションスピード

	// モデルに関して
	int modelHandle;	// モデルのハンドル
	float modelHeight;	// モデルの高さ
	float modelWigth;	// モデルの横幅
	
	// 足元の影
	float shadowHeight;
	float shadowSize;
	void ShadowFoot();

	// モーションに関して
	int attachMotion;			// モーションのアタッチ
	int attachNum;				// 現在のモーション番号
	float totalTime;			// モーションの総合時間
	void Player_PlayAnim(int attach);		// モーション変更
	void Player_AnimProcess();				// モーション動作

	// 当たり判定
	bool moveFlag;						// 動いているかどうか
	void StageHit();							// 当たり判定を行う

private:
	// 足元の影
	MV1_COLL_RESULT_POLY_DIM ShadowHitResDim;
	MV1_COLL_RESULT_POLY *ShadowHitRes;
	VERTEX3D ShadowVertex[3];
	VECTOR ShadowSlideVec;
	int shadowHandle;

	// モーションに関して
	float nowPlayTime;			// モーションの現在の時間
	float motionBlendTime;		// ブレンド時間
	int preAttach;				// 直前のモーションアタッチ
	float preMotionPlayTime;	// 直前のモーション時間

	// 当たり判定
	int stageHandle;					// ステージハンドル
	int wallNum;						// 判定する壁の数
	int floorNum;						// 判定する床の数
	bool hitFlag;						// 当たっているかどうか
	float maxYHit;						// 当たっているY座標の最大
	MV1_COLL_RESULT_POLY_DIM hitDim;			// 周囲のポリゴンを代入する構造体
	MV1_COLL_RESULT_POLY* wallPoly[2048];		// 壁用のポリゴンの構造体
	MV1_COLL_RESULT_POLY* floorPoly[2048];		// 床用のポリゴンの構造体
	MV1_COLL_RESULT_POLY* mainPoly;				// ポリゴンの構造体にアクセスする構造体
	HITRESULT_LINE lineResult;					// 線分との判定を代入する構造体

public:
	BasicActor(int collStageHandle);
	virtual ~BasicActor();

	void Draw();		// 描画

	VECTOR GetArea();
};
